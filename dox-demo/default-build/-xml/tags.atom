<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <link rel="self" type="application/rss+xml" href="http://metaleap.github.io/haxtatic/-xml/tags.atom" />
    <title>metaleap.github.io haXtags</title>
    <subtitle>Embed    HaXtatic     tags anywhere in source contents,                                   templates    ,                                            snippets    
	or                                  *.haxproj     files with a simple notation:       {   Prefix    |   Name    |       }        or
	      {   Prefix    |   Name    :    Args    |       }       .    
	   Example:       {P       |date|       }        outputs in-place the currently set                                   page date     (using the
	built-in fallback date-time format since none was specified in the tag) when it is processed: {X|note:{P|date|}|}.    
	   Available "prefixes" (or    haxTag types    ) are (in order of simplicity)    T    ,    B    ,    P     and    X    :</subtitle>
    <id>http://metaleap.github.io/haxtatic/tags/index.html</id>
    <link href="http://metaleap.github.io/haxtatic/tags/index.html"/>
    <updated>2016-12-18T00:00:00Z</updated>
    <entry>
        <title type="html">T-tags: named plain text/markup snippets</title>
        <summary type="html">&lt;code&gt;{T&lt;!----&gt;| .. |&lt;!----&gt;}&lt;/code&gt; tags directly output named textual contents defined in a &lt;i&gt;*.haxproj&lt;/i&gt; file.</summary>
        <link href="../tags/t.html"/><author><name>metaleap.github.io</name></author>
        <id>tag:metaleap.github.io,2016-12-18:haxtatic/tags/t.html</id>
        <updated>2016-12-18T00:00:00Z</updated>
        <content type="html">&lt;h1&gt;T-tags: named plain text/markup snippets&lt;/h1&gt;
&lt;p class=&quot;up&quot;&gt;&lt;code&gt;{T&lt;!----&gt;| .. |&lt;!----&gt;}&lt;/code&gt; tags directly output named textual contents defined in a &lt;i&gt;*.haxproj&lt;/i&gt; file.&lt;/p&gt;
&lt;h2 id=&quot;In a nutshell&quot;&gt;In a nutshell&lt;/h2&gt;
&lt;ul&gt;
	&lt;li&gt;Definitions in &lt;a href=&quot;../basics/haxproj.html#tdecl&quot;&gt;*.haxproj&lt;/a&gt;:&lt;br/&gt;&lt;code&gt;|T|&lt;i&gt;AuthBlurb&lt;/i&gt;:&lt;i&gt; The author is a serial enthusiast&lt;br/&gt;role-playing &amp;lt;a&amp;gt;on XingedIn&amp;lt;/a&amp;gt;.&lt;/i&gt;&lt;/code&gt;&lt;/li&gt;
	&lt;li&gt;Usage anywhere: &lt;code&gt;{T&lt;!----&gt;|&lt;i&gt;AuthBlurb&lt;/i&gt;|&lt;!----&gt;}&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;See also&quot;&gt;See also&lt;/h2&gt;
&lt;ul&gt;
	&lt;li&gt;To define page-specific / unique-per-page values (still fully referable from outside the page ie. in &lt;a href=&quot;../basics/tmplsnip.html&quot;&gt;templates&lt;/a&gt;, &lt;a href=&quot;../basics/tmplsnip.html#snippets&quot;&gt;snippets&lt;/a&gt; and &lt;a href=&quot;../basics/haxproj.html&quot;&gt;*.haxproj&lt;/a&gt; files), use &lt;a href=&quot;../tags/p.html#Custom&quot;&gt;custom P-tags&lt;/a&gt;.&lt;/li&gt;
	&lt;li&gt;For more versatile parameterized snippets with named variable value substitutions, &lt;a href=&quot;../basics/haxproj.html#xdecl&quot;&gt;declare an X-tag definition&lt;/a&gt; (or multiple) of type &lt;a href=&quot;../xtypes/hax.snippet.html&quot;&gt;hax.snippet&lt;/a&gt; instead.&lt;/li&gt;
&lt;/ul&gt;
</content>
    </entry><entry>
        <title type="html">P-tags: page-specific outputs</title>
        <summary type="html">&lt;code&gt;{P&lt;!----&gt;| .. |&lt;!----&gt;}&lt;/code&gt; tags refer to the &lt;b&gt;current page context&lt;/b&gt; during rendering; outputting pre-computed values (page title, page date, etc.), custom per-page variables, or correct relative paths from the current location.</summary>
        <link href="../tags/p.html"/><author><name>metaleap.github.io</name></author>
        <id>tag:metaleap.github.io,2016-12-17:haxtatic/tags/p.html</id>
        <updated>2016-12-17T00:00:00Z</updated>
        <content type="html">&lt;h1&gt;P-tags: page-specific outputs&lt;/h1&gt;
&lt;p class=&quot;up&quot;&gt;&lt;code&gt;{P&lt;!----&gt;| .. |&lt;!----&gt;}&lt;/code&gt; tags refer to the &lt;b&gt;current page context&lt;/b&gt; during rendering; outputting pre-computed values (page title, page date, etc.), custom per-page variables, or correct relative paths from the current location.&lt;/p&gt;
&lt;h2 id=&quot;Built-in&quot;&gt;Built-in&lt;/h2&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;code&gt;{P&lt;!----&gt;|title|&lt;!----&gt;}&lt;/code&gt; &amp;rarr; current page content source&apos;s first &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt;&apos;s entire inner markup (if any)&lt;br/&gt;&amp;mdash; eg. for this page: &lt;span class=&quot;hd-note&quot;&gt;P-tags: page-specific outputs&lt;/span&gt;&lt;/li&gt;
	&lt;li&gt;&lt;code&gt;{P&lt;!----&gt;|1st:&lt;i&gt;htmltagname&lt;/i&gt;|&lt;!----&gt;}&lt;/code&gt; &amp;rarr; current page content source&apos;s first &lt;code&gt;&amp;lt;&lt;i&gt;htmltagname&lt;/i&gt;&amp;gt;&lt;/code&gt;&apos;s entire inner markup (if any)&lt;br/&gt;&amp;mdash; eg. for this page for &lt;code&gt;&lt;i&gt;{P&lt;!----&gt;|1st:&lt;/i&gt;b&lt;i&gt;|&lt;!----&gt;}&lt;/i&gt;&lt;/code&gt;: &lt;span class=&quot;hd-note&quot;&gt;current page context&lt;/span&gt;&lt;/li&gt;
	&lt;li&gt;&lt;code&gt;{P&lt;!----&gt;|:content:|&lt;!----&gt;}&lt;/code&gt; &amp;rarr; current page&apos;s entire content source markup (only works in your &lt;a href=&quot;../basics/tmplsnip.html&quot;&gt;*.haxtmpl.*&lt;/a&gt; files)&lt;/li&gt;
	&lt;li&gt;&lt;code&gt;{P&lt;!----&gt;|date|&lt;!----&gt;}&lt;/code&gt; and &lt;code&gt;{P&lt;!----&gt;|date:&lt;i&gt;mydtformatname&lt;/i&gt;|&lt;!----&gt;}&lt;/code&gt; &amp;rarr; current &lt;a href=&quot;../basics/datetime.html&quot;&gt;page date&lt;/a&gt; &lt;br/&gt;&amp;mdash; eg. for this page: &lt;span class=&quot;hd-note&quot;&gt;2016-12-17&lt;/span&gt;&lt;/li&gt;
	&lt;li&gt;&lt;code&gt;{P&lt;!----&gt;|fileName|&lt;!----&gt;}&lt;/code&gt; &amp;rarr; the current page&apos;s output file name&lt;br/&gt;&amp;mdash; eg. for this page: &lt;span class=&quot;hd-note&quot;&gt;p.html&lt;/span&gt;&lt;/li&gt;
	&lt;li&gt;&lt;code&gt;{P&lt;!----&gt;|fileBaseName|&lt;!----&gt;}&lt;/code&gt; &amp;rarr; the current page&apos;s output file name without file extensions&lt;br/&gt;&amp;mdash; eg. for this page: &lt;span class=&quot;hd-note&quot;&gt;p&lt;/span&gt;&lt;/li&gt;
	&lt;li&gt;&lt;code&gt;{P&lt;!----&gt;|fileUri|&lt;!----&gt;}&lt;/code&gt; &amp;rarr; the current page&apos;s URI path relative to the site root&lt;br/&gt;&amp;mdash; eg. for this page: &lt;span class=&quot;hd-note&quot;&gt;/tags/p.html&lt;/span&gt;&lt;/li&gt;
	&lt;li&gt;&lt;code&gt;{P&lt;!----&gt;|filePath|&lt;!----&gt;}&lt;/code&gt; &amp;rarr; the current page&apos;s file path relative to the output directory&lt;br/&gt;&amp;mdash; eg. for this page: &lt;span class=&quot;hd-note&quot;&gt;tags\p.html&lt;/span&gt;&lt;/li&gt;
	&lt;li&gt;&lt;code&gt;{P&lt;!----&gt;|dirName|&lt;!----&gt;}&lt;/code&gt; &amp;rarr; name of the current page&apos;s directory&lt;br/&gt;&amp;mdash; eg. for this page: &lt;span class=&quot;hd-note&quot;&gt;tags&lt;/span&gt;&lt;/li&gt;
	&lt;li&gt;&lt;code&gt;{P&lt;!----&gt;|dirUri|&lt;!----&gt;}&lt;/code&gt; &amp;rarr; URI path (relative to the site root) for the the current page&apos;s directory&lt;br/&gt;&amp;mdash; eg. for this page: &lt;span class=&quot;hd-note&quot;&gt;/tags/&lt;/span&gt;&lt;/li&gt;
	&lt;li&gt;&lt;code&gt;{P&lt;!----&gt;|dirPath|&lt;!----&gt;}&lt;/code&gt; &amp;rarr; relative path of the current page&apos;s directory&lt;br/&gt;&amp;mdash; eg. for this page: &lt;span class=&quot;hd-note&quot;&gt;tags\&lt;/span&gt;&lt;/li&gt;
	&lt;li&gt;&lt;code&gt;{P&lt;!----&gt;|srcPath|&lt;!----&gt;}&lt;/code&gt; &amp;rarr; full path to the content source of the current page&lt;br/&gt;&amp;mdash; eg. for this page: &lt;span class=&quot;hd-note&quot;&gt;D:\dev\hs\haxtatic\dox-demo\pages\tags\2016-12-17.p.html&lt;/span&gt;&lt;/li&gt;
	&lt;li&gt;&lt;code&gt;{P&lt;!----&gt;|srcRelPath|&lt;!----&gt;}&lt;/code&gt; &amp;rarr; project-directory-relative path to the content source of the current page&lt;br/&gt;&amp;mdash; eg. for this page: &lt;span class=&quot;hd-note&quot;&gt;pages\tags\2016-12-17.p.html&lt;/span&gt;&lt;/li&gt;
	&lt;li&gt;&lt;code&gt;{P&lt;!----&gt;|outBuild|&lt;!----&gt;}&lt;/code&gt; &amp;rarr; full path to the current page&apos;s output file&lt;br/&gt;&amp;mdash; eg. for this page: &lt;span class=&quot;hd-note&quot;&gt;D:\dev\hs\haxtatic\dox-demo\default-build\tags\p.html&lt;/span&gt;&lt;/li&gt;
	&lt;li&gt;&lt;code&gt;{P&lt;!----&gt;|outDeploy|&lt;!----&gt;}&lt;/code&gt; &amp;rarr; full path to the current page&apos;s output file in the &lt;a href=&quot;../basics/haxproj.html#cmisc&quot;&gt;secondary&lt;/a&gt; output directory, if any&lt;/li&gt;
	&lt;li&gt;&lt;code&gt;{P&lt;!----&gt;|srcTime|&lt;!----&gt;}&lt;/code&gt; and &lt;code&gt;{P&lt;!----&gt;|srcTime:&lt;i&gt;mydtformatname&lt;/i&gt;|&lt;!----&gt;}&lt;/code&gt; &amp;rarr; the current page source&apos;s &lt;i&gt;actual&lt;/i&gt; modification date/time (which may differ from the &lt;a href=&quot;../basics/datetime.html&quot;&gt;page date&lt;/a&gt; if that was set explicitly)&lt;br/&gt;&amp;mdash; eg. for this page: &lt;span class=&quot;hd-note&quot;&gt;2017-02-11&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Custom&quot;&gt;Custom&lt;/h2&gt;
&lt;p&gt;
	Define those like &lt;code&gt;{%P&lt;!----&gt;|&lt;i&gt;name&lt;/i&gt;=&lt;i&gt;value&lt;/i&gt;|%&lt;!----&gt;}&lt;/code&gt; in a page; then while that page is being processed, this &lt;code&gt;&lt;i&gt;value&lt;/i&gt;&lt;/code&gt; will replace all encounters of &lt;code&gt;{P&lt;!----&gt;|&lt;i&gt;name&lt;/i&gt;|&lt;!----&gt;}&lt;/code&gt; &lt;i&gt;anywhere&lt;/i&gt; in the page output (including portions coming from the &lt;a href=&quot;../basics/tmplsnip.html&quot;&gt;outer template&lt;/a&gt;, &lt;a href=&quot;../basics/tmplsnip.html#snippets&quot;&gt;snippets&lt;/a&gt; or &lt;a href=&quot;../basics/haxproj.html&quot;&gt;*.haxproj&lt;/a&gt; definitions).
&lt;/p&gt;
&lt;p&gt;
	Any characters are acceptable for the &lt;i&gt;name&lt;/i&gt; in between &lt;code&gt;{%P&lt;!----&gt;|&lt;/code&gt; and &lt;code&gt;&amp;nbsp;=&lt;/code&gt;, as well as the &lt;i&gt;value&lt;/i&gt; in between &lt;code&gt;&amp;nbsp;=&lt;/code&gt; and &lt;code&gt;&amp;nbsp;|%&lt;!----&gt;}&lt;/code&gt;. Name and value will each be stripped of all leading and trailing white-space. Later re-defines of an already defined variable are ignored.
&lt;/p&gt;
&lt;p&gt;
	Of note: you &lt;b&gt;can&lt;/b&gt; overwrite all the built-ins listed above with this feature! Possibly useful for setting page title / date that way, probably useless otherwise &amp;mdash; but possible.
&lt;/p&gt;
&lt;p class=&quot;hd-note&quot;&gt;If a P-tag such as &lt;code&gt;{P&lt;!----&gt;|foo|&lt;!----&gt;}&lt;/code&gt; fails to resolve to any result, as a last resort (before re-emitting itself in the generated output) it attempts to lookup a &lt;a href=&quot;../tags/t.html&quot;&gt;T-tag&lt;/a&gt; named (such as) &lt;code&gt;P|foo&lt;/code&gt; &amp;mdash; use this to define a &quot;&lt;b&gt;fallback default&lt;/b&gt;&quot; value for accessing any custom P-tags (eg. occurring in templates or snippets) that only &lt;i&gt;some&lt;/i&gt; pages set but not others.&lt;/p&gt;
&lt;h3&gt;Parameterizing&lt;/h3&gt;
&lt;p&gt;Supported for up to 6 (in total) occurrences in &lt;i&gt;value&lt;/i&gt; of &lt;code&gt;&amp;nbsp;%s&lt;/code&gt; or &lt;code&gt;&amp;nbsp;%v&lt;/code&gt; (the former should technically be minimally faster, but both functionally equivalent). For accesses then occurring anywhere not simply via &lt;code&gt;{P&lt;!----&gt;|&lt;i&gt;name&lt;/i&gt;|&lt;!----&gt;}&lt;/code&gt;, but via &lt;code&gt;{P&lt;!----&gt;|&lt;i&gt;name&lt;/i&gt;:&lt;i&gt;my value #1&lt;/i&gt;|&lt;!----&gt;}&lt;/code&gt;, &lt;code&gt;{P&lt;!----&gt;|&lt;i&gt;name&lt;/i&gt;:&lt;i&gt;value1:value2&lt;/i&gt;|&lt;!----&gt;}&lt;/code&gt;, &lt;code&gt;{P&lt;!----&gt;|&lt;i&gt;name&lt;/i&gt;:&lt;i&gt;val1:val2:val3&lt;/i&gt;|&lt;!----&gt;}&lt;/code&gt;, &lt;code&gt;{P&lt;!----&gt;|&lt;i&gt;name&lt;/i&gt;:&lt;i&gt;v1:v2:v3:v4&lt;/i&gt;|&lt;!----&gt;}&lt;/code&gt;, &lt;code&gt;{P&lt;!----&gt;|&lt;i&gt;name&lt;/i&gt;:&lt;i&gt;v1:v2:v3:v4:v5&lt;/i&gt;|&lt;!----&gt;}&lt;/code&gt;, or &lt;code&gt;{P&lt;!----&gt;|&lt;i&gt;name&lt;/i&gt;:&lt;i&gt;v1:v2:v3:v4:v5:v6&lt;/i&gt;|&lt;!----&gt;}&lt;/code&gt; the appropriate in-place value substitutions will be effected. (For any more expressive substitution requirements, use of a &lt;a href=&quot;../basics/tmplsnip.html#snippets&quot;&gt;snippet&lt;/a&gt; would be called for either instead of or combined with the custom P-tag.)&lt;/p&gt;
&lt;p class=&quot;hd-note&quot;&gt;&lt;b&gt;If&lt;/b&gt; any such parameterized accesses are to be employed anywhere, to avoid faulty outputs &lt;b&gt;be sure to self-escape&lt;/b&gt; &lt;i&gt;all&lt;/i&gt; other occurrences of &lt;code&gt;&amp;nbsp;%&lt;/code&gt; in the original &lt;i&gt;value&lt;/i&gt; (not in the accessing P-tags) by doubling each to &lt;code&gt;&amp;nbsp;%%&lt;/code&gt;.&lt;/p&gt;
&lt;span id=&quot;relpaths&quot;&gt;&lt;h2 id=&quot;Page-relative URLs&quot;&gt;Page-relative URLs&lt;/h2&gt;&lt;/span&gt;
&lt;p&gt;
	Useful when your machine isn&apos;t running a local web server / HTTP daemon: use &lt;code&gt;{P&lt;!----&gt;|/ &lt;i&gt;your/uri/here&lt;/i&gt; |&lt;!----&gt;}&lt;/code&gt; to rewrite that site-root-relative path such that it will correctly point to the destination from the current page &lt;i&gt;without&lt;/i&gt; a leading &lt;code&gt;&amp;nbsp;/&lt;/code&gt;.&lt;br/&gt;&amp;mdash; eg. linking to &lt;span class=&quot;hd-note&quot;&gt;/index.html&lt;/span&gt; and &lt;span class=&quot;hd-note&quot;&gt;/basics/index.html&lt;/span&gt; from this page via &lt;code&gt;{P&lt;!----&gt;|/&lt;i&gt;index.html&lt;/i&gt;|&lt;!----&gt;}&lt;/code&gt; and &lt;code&gt;{P&lt;!----&gt;|/&lt;i&gt;basics/index.html&lt;/i&gt;|&lt;!----&gt;}&lt;/code&gt; respectively outputs in-place: &lt;span class=&quot;hd-note&quot;&gt;../index.html&lt;/span&gt; and &lt;span class=&quot;hd-note&quot;&gt;../basics/index.html&lt;/span&gt;.
&lt;/p&gt;
&lt;p&gt;
	If all pages exist next to each other at the site-root level anyway (micro-sites etc.), this isn&apos;t of course even needed.
&lt;/p&gt;
&lt;span id=&quot;delay&quot;&gt;&lt;h2 id=&quot;Delaying X-tags&quot;&gt;Delaying X-tags&lt;/h2&gt;&lt;/span&gt;
&lt;p class=&quot;hd-note&quot;&gt;Except for rare intricate edge-cases, this is &lt;b&gt;typically neither necessary nor desirable&lt;/b&gt;, but in any
event always worth a try (to be undone later if possible) when investigating unexpected X-tag outputs.&lt;/p&gt;
&lt;p&gt;By default, the built-in &lt;a href=&quot;../xtypes/index.html&quot;&gt;X-renderers&lt;/a&gt; readily detect and decide autonomously whether to process an &lt;a href=&quot;../tags/x.html&quot;&gt;X-tag&lt;/a&gt; as &lt;a href=&quot;../tags/index.html#stages&quot;&gt;early&lt;/a&gt; as possible, or only once a page context is current (and each expressly documents this behavior).&lt;/p&gt;
&lt;p&gt;However, any X-tag can be forced to delay rendering until &lt;a href=&quot;../tags/index.html#stages&quot;&gt;page time&lt;/a&gt; by wrapping it inside a P-tag, ie. turning &lt;code&gt;{X&lt;!----&gt;|&lt;i&gt; .. tag content .. &lt;/i&gt;|&lt;!----&gt;}&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;into &lt;b&gt;this&lt;/b&gt;: &lt;code&gt;{P&lt;!----&gt;|X|&lt;i&gt; .. tag content .. &lt;/i&gt;|&lt;!----&gt;}&lt;/code&gt;&lt;/li&gt;
	&lt;li&gt;&lt;b&gt;not&lt;/b&gt; this: &lt;code&gt;{P&lt;!----&gt;|{X&lt;!----&gt;|&lt;i&gt; .. tag content .. &lt;/i&gt;|&lt;!----&gt;}|&lt;!----&gt;}&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    </entry><entry>
        <title type="html">B-tags: Blok info (name, title, desc, ..)</title>
        <summary type="html">A &lt;code&gt;{B&lt;!----&gt;| .. |&lt;!----&gt;}&lt;/code&gt; tag outputs, for the (named or current) &lt;a href=&quot;../basics/bloks.html&quot;&gt;Blok&lt;/a&gt;, the value (as set in a &lt;a href=&quot;../basics/haxproj.html#bdecl&quot;&gt;&lt;i&gt;*.haxproj&lt;/i&gt; |B| directive&lt;/a&gt;) of the requested property.</summary>
        <link href="../tags/b.html"/><author><name>metaleap.github.io</name></author>
        <id>tag:metaleap.github.io,2016-12-16:haxtatic/tags/b.html</id>
        <updated>2016-12-16T00:00:00Z</updated>
        <content type="html">&lt;h1&gt;B-tags: Blok info (name, title, desc, ..)&lt;/h1&gt;
&lt;p&gt;A &lt;code&gt;{B&lt;!----&gt;| .. |&lt;!----&gt;}&lt;/code&gt; tag outputs, for the (named or current) &lt;a href=&quot;../basics/bloks.html&quot;&gt;Blok&lt;/a&gt;, the value (as set in a &lt;a href=&quot;../basics/haxproj.html#bdecl&quot;&gt;&lt;i&gt;*.haxproj&lt;/i&gt; |B| directive&lt;/a&gt;) of the requested property.&lt;/p&gt;
&lt;p&gt;Format: &lt;code&gt;{B&lt;!----&gt;|&lt;i&gt;propertyname&lt;/i&gt;:&lt;i&gt;blokname&lt;/i&gt;|&lt;!----&gt;}&lt;/code&gt; or &lt;code&gt;{B&lt;!----&gt;|&lt;i&gt;propertyname&lt;/i&gt;|&lt;!----&gt;}&lt;/code&gt;. In a latter, ie. whenever a &lt;i&gt;blokname&lt;/i&gt; is not supplied, the B-tag refers to the &lt;i&gt;&quot;current&quot;&lt;/i&gt; (if any) Blok:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;code&gt;{&lt;!----&gt;B|name|&lt;!----&gt;}&lt;/code&gt; &amp;rarr; name of the current page&apos;s associated Blok (if any)&lt;br/&gt;&amp;mdash; eg. for this page: &lt;span class=&quot;hd-note&quot;&gt;tags&lt;/span&gt;&lt;/li&gt;
	&lt;li&gt;&lt;code&gt;{&lt;!----&gt;B|title:&lt;i&gt;name&lt;/i&gt;|&lt;!----&gt;}&lt;/code&gt; &amp;rarr; title of the named (or current) Blok&lt;br/&gt;&amp;mdash; eg. for this page, not giving any particular Blok &lt;i&gt;name&lt;/i&gt;: &lt;span class=&quot;hd-note&quot;&gt;haXtags&lt;/span&gt;&lt;/li&gt;
	&lt;li&gt;&lt;code&gt;{&lt;!----&gt;B|desc:&lt;i&gt;name&lt;/i&gt;|&lt;!----&gt;}&lt;/code&gt; &amp;rarr; description of the named (or current) Blok&lt;br/&gt;&amp;mdash; eg. in this site for Blok &lt;i&gt;name&lt;/i&gt;d &lt;b&gt;basics&lt;/b&gt;:&lt;br/&gt;&lt;textarea readonly=&quot;readonly&quot;&gt;&lt;p&gt;This material may appear &quot;unduly exhaustive&quot; at
	first glance, but this is all blatantly-simple-stuff
	and mostly just spelled out in (almost) every last
	minor detail for completeness and future reference.&lt;/p&gt;
	&lt;p&gt;Notably no article on &lt;b&gt;&quot;how to author pages&quot;&lt;/b&gt;.
	That&apos;s because there&apos;s nothing to it once a quick note
	is made of &lt;a href=&quot;../basics/projdir.html&quot;&gt;where to place them&lt;/a&gt;,
	&lt;a href=&quot;../basics/tmplsnip.html&quot;&gt;which outer-template is applied during processing &amp;amp; how&lt;/a&gt;,
	as well as the diverse range of &lt;a href=&quot;../tags/index.html&quot;&gt;haXtags&lt;/a&gt;
	that any page (indeed any user-authored/-customized file
	in a project) may embed and combine in any manner.&lt;/p&gt;&lt;/textarea&gt;&lt;/li&gt;
	&lt;li&gt;&lt;code&gt;{&lt;!----&gt;B|atomFile:&lt;i&gt;name&lt;/i&gt;|&lt;!----&gt;}&lt;/code&gt; &amp;rarr; relative path to the autogenerated &lt;a href=&quot;../basics/xmlfiles.html#blokatoms&quot;&gt;.atom&lt;/a&gt; file (if any) for the named (or current) Blok&lt;/li&gt;
	&lt;li&gt;&lt;code&gt;{&lt;!----&gt;B|blokIndexPageFile:&lt;i&gt;name&lt;/i&gt;|&lt;!----&gt;}&lt;/code&gt; &amp;rarr; relative path to the &lt;a href=&quot;../basics/bloks.html#auto&quot;&gt;autogenerated&lt;/a&gt; index page for the named (or current) Blok&lt;br/&gt;&amp;mdash; eg. in this site for Blok &lt;i&gt;name&lt;/i&gt;d &lt;b&gt;basics&lt;/b&gt;: &lt;span class=&quot;hd-note&quot;&gt;basics/index.html&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    </entry><entry>
        <title type="html">X-tags: dynamic renderers</title>
        <summary type="html">An &lt;code&gt;{X&lt;!----&gt;| &lt;i&gt;..&lt;/i&gt; |&lt;!----&gt;}&lt;/code&gt; tag invokes a programmatic output renderer (aka.
&lt;a href=&quot;../xtypes/index.html&quot;&gt;X-renderer&lt;/a&gt;).</summary>
        <link href="../tags/x.html"/><author><name>metaleap.github.io</name></author>
        <id>tag:metaleap.github.io,2016-12-15:haxtatic/tags/x.html</id>
        <updated>2016-12-15T00:00:00Z</updated>
        <content type="html">&lt;h1&gt;X-tags: dynamic renderers&lt;/h1&gt;
&lt;p class=&quot;up&quot;&gt;An &lt;code&gt;{X&lt;!----&gt;| &lt;i&gt;..&lt;/i&gt; |&lt;!----&gt;}&lt;/code&gt; tag invokes a programmatic output renderer (aka.
&lt;a href=&quot;../xtypes/index.html&quot;&gt;X-renderer&lt;/a&gt;).&lt;/p&gt;
&lt;p class=&quot;up&quot;&gt;Such an &quot;&lt;i&gt;X-renderer&lt;/i&gt;&quot; may be of a built-in type, or of a custom one developed in Haskell and linked into the &lt;i&gt;HaXtatic&lt;/i&gt; code-base manually. Naturally only the built-in types are covered here and in the &lt;a href=&quot;../xtypes/index.html&quot;&gt;X-renderers&lt;/a&gt; section.&lt;/p&gt;
&lt;p class=&quot;up&quot;&gt;Like &lt;b&gt;T&lt;/b&gt;-tags (and unlike &lt;b&gt;P&lt;/b&gt;- and &lt;b&gt;B&lt;/b&gt;-tags), there &lt;i&gt;are no&lt;/i&gt; predefined &lt;b&gt;X&lt;/b&gt;-tags, only those &lt;a href=&quot;../basics/haxproj.html#xdecl&quot;&gt;declared and set up in &lt;i&gt;*.haxproj&lt;/i&gt; files&lt;/a&gt; &amp;mdash; ie. before an X-tag can be embedded many times anywhere in the project, it is first to be defined once in a &lt;i&gt;*.haxproj&lt;/i&gt;: to be given a name and some default settings.&lt;/p&gt;
&lt;p&gt;Here are the built-in &lt;i&gt;X-renderers&lt;/i&gt; ready to set up and try out:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;#demoSimplest&quot;&gt;demoSimplest&lt;/a&gt; &amp;mdash; &quot;Hello World!&quot;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;#demoCfgArgs&quot;&gt;demoCfgArgs&lt;/a&gt; &amp;mdash; &quot;Hello, &lt;i&gt;foo&lt;/i&gt;!&quot;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;#hax.miniTag&quot;&gt;hax.miniTag&lt;/a&gt; &amp;mdash; eliminate verbosity of repetetive markup&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;#hax.htmlLink&quot;&gt;hax.htmlLink&lt;/a&gt; &amp;mdash; less-verbose hyperlinks&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;#hax.htmlImage&quot;&gt;hax.htmlImage&lt;/a&gt; &amp;mdash; less-verbose images&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;#hax.htmlLinks&quot;&gt;hax.htmlLinks&lt;/a&gt; &amp;mdash; lean &amp;amp; handy navigation helper&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;#hax.htmlAnchors&quot;&gt;hax.htmlAnchors&lt;/a&gt; &amp;mdash; gather and link to in-page contents&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;#hax.xmlEscape&quot;&gt;hax.xmlEscape&lt;/a&gt; &amp;mdash; HTML/XML/etc.-escape given content&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;#hax.dtFormat&quot;&gt;hax.dtFormat&lt;/a&gt; &amp;mdash; dates formatted as desired&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;#hax.unMarkup&quot;&gt;hax.unMarkup&lt;/a&gt; &amp;mdash; naively plain-text-ify given HTML/XML/etc. markup&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;#hax.noOp&quot;&gt;hax.noOp&lt;/a&gt; &amp;mdash; output a constant value, or any given input untouched&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;#hax.snippet&quot;&gt;hax.snippet&lt;/a&gt; &amp;mdash; elsewhere known as &quot;custom controls&quot;, &quot;components&quot;, &quot;sub-templates&quot;, or
		&quot;&lt;i&gt;thing&lt;/i&gt;lets&quot;..&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;#hax.iterator&quot;&gt;hax.iterator&lt;/a&gt; &amp;mdash; versatile content/record
		selector&amp;rarr;rearranger&amp;rarr;reformatter&amp;rarr;renderer&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;#hax.feedView&quot;&gt;hax.feedView&lt;/a&gt; &amp;mdash; richer, faster &amp;amp; easier iteration over (and rendering of) select
		&quot;feed posts&quot; / Blok pages&lt;/li&gt;
&lt;/ul&gt;
&lt;span id=&quot;demo&quot;&gt;
&lt;h2 id=&quot;demoSimplest&quot;&gt;demoSimplest&lt;/h2&gt;
	&lt;p class=&quot;up&quot;&gt;Outputs &lt;code&gt;&amp;lt;h1&amp;gt;Hello World!&amp;lt;/h1&amp;gt;&lt;/code&gt;.&lt;/p&gt;
	
	&lt;ol&gt;
		&lt;li class=&quot;up&quot;&gt;
			&lt;a href=&quot;../xtypes/demoSimplest.html#decl&quot;&gt;Declaration&lt;/a&gt; of an &lt;code&gt;|X|demoSimplest:&lt;u&gt;&lt;i&gt;myTag&lt;/i&gt;&lt;/u&gt;&lt;/code&gt; directive in a
			&lt;a href=&quot;../basics/haxproj.html#xdecl&quot;&gt;*.haxproj&lt;/a&gt; file,
			&lt;ul&gt;&lt;li&gt;further configuring: &lt;i&gt;(no other settings)&lt;/i&gt;&lt;/li&gt;&lt;/ul&gt;
		&lt;/li&gt;
		&lt;li&gt;Usage anywhere: &lt;code&gt;{X&lt;!----&gt;|&lt;u&gt;myTag&lt;/u&gt; |&lt;!----&gt;}&lt;/code&gt;&lt;/li&gt;
	&lt;/ol&gt;&lt;h2 id=&quot;demoCfgArgs&quot;&gt;demoCfgArgs&lt;/h2&gt;
	&lt;p class=&quot;up&quot;&gt;Outputs &lt;code&gt;&amp;lt;h4&amp;gt;Hello, &amp;lt;b&amp;gt;&lt;i&gt;greetname&lt;/i&gt;!&amp;lt;/b&amp;gt;&amp;lt;/h4&amp;gt;&lt;/code&gt;.&lt;/p&gt;
	
	&lt;ol&gt;
		&lt;li class=&quot;up&quot;&gt;
			&lt;a href=&quot;../xtypes/demoCfgArgs.html#decl&quot;&gt;Declaration&lt;/a&gt; of an &lt;code&gt;|X|demoCfgArgs:&lt;u&gt;&lt;i&gt;myTag&lt;/i&gt;&lt;/u&gt;&lt;/code&gt; or &lt;code&gt;|X|demoCfgArgs:&lt;i&gt;myTag&lt;/i&gt;:&lt;i&gt;greetname&lt;/i&gt;&lt;/code&gt; directive in a
			&lt;a href=&quot;../basics/haxproj.html#xdecl&quot;&gt;*.haxproj&lt;/a&gt; file,
			&lt;ul&gt;&lt;li&gt;further configuring: &lt;i&gt;(no other settings)&lt;/i&gt;&lt;/li&gt;&lt;/ul&gt;
		&lt;/li&gt;
		&lt;li&gt;Usage anywhere: &lt;code&gt;{X&lt;!----&gt;|&lt;u&gt;myTag&lt;/u&gt;|&lt;!----&gt;}&lt;/code&gt; or &lt;code&gt;{X&lt;!----&gt;|&lt;i&gt;myTag&lt;/i&gt;:&lt;i&gt;greetname&lt;/i&gt; |&lt;!----&gt;}&lt;/code&gt;&lt;/li&gt;
	&lt;/ol&gt;&lt;h2 id=&quot;hax.miniTag&quot;&gt;hax.miniTag&lt;/h2&gt;
	&lt;p class=&quot;up&quot;&gt;Outputs &lt;code&gt;&amp;nbsp;&amp;lt;&lt;i&gt;somehtmltag ..&lt;/i&gt;&amp;gt;&lt;i&gt;tag&apos;s inner-markup content&lt;/i&gt;&amp;lt;/&lt;i&gt;somehtmltag&lt;/i&gt;&amp;gt;&lt;/code&gt;.&lt;/p&gt;
	
	&lt;ol&gt;
		&lt;li class=&quot;up&quot;&gt;
			&lt;a href=&quot;../xtypes/hax.miniTag.html#decl&quot;&gt;Declaration&lt;/a&gt; of an &lt;code&gt;|X|hax.miniTag:&lt;u&gt;&lt;i&gt;myTag&lt;/i&gt;&lt;/u&gt;:&lt;i&gt;somehtmltag&lt;/i&gt;: &lt;i&gt;..&lt;/i&gt;&lt;/code&gt; directive in a
			&lt;a href=&quot;../basics/haxproj.html#xdecl&quot;&gt;*.haxproj&lt;/a&gt; file,
			&lt;ul&gt;&lt;li&gt;further configuring: &lt;code&gt;attr&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;
		&lt;/li&gt;
		&lt;li&gt;Usage anywhere: &lt;code&gt;{X&lt;!----&gt;|&lt;u&gt;myTag&lt;/u&gt;:&lt;i&gt; tag&apos;s inner-markup content &lt;/i&gt; |&lt;!----&gt;}&lt;/code&gt;&lt;/li&gt;
	&lt;/ol&gt;&lt;h2 id=&quot;hax.htmlImage&quot;&gt;hax.htmlImage&lt;/h2&gt;
	&lt;p class=&quot;up&quot;&gt;Outputs &lt;code&gt;&amp;lt;img &lt;i&gt;..&lt;/i&gt; /&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;a &lt;i&gt;..&lt;/i&gt;&amp;gt;&amp;lt;img &lt;i&gt;..&lt;/i&gt; /&amp;gt;&amp;lt;/a&amp;gt;&lt;/code&gt;.&lt;/p&gt;
	
	&lt;ol&gt;
		&lt;li class=&quot;up&quot;&gt;
			&lt;a href=&quot;../xtypes/hax.htmlImage.html#decl&quot;&gt;Declaration&lt;/a&gt; of an &lt;code&gt;|X|hax.htmlImage:&lt;u&gt;&lt;i&gt;myTag&lt;/i&gt;&lt;/u&gt;:&lt;i&gt;some/rel/base/path&lt;/i&gt;: &lt;i&gt;..&lt;/i&gt;&lt;/code&gt; directive in a
			&lt;a href=&quot;../basics/haxproj.html#xdecl&quot;&gt;*.haxproj&lt;/a&gt; file,
			&lt;ul&gt;&lt;li&gt;further configuring: &lt;code&gt;attrLink&lt;/code&gt;, &lt;code&gt;attrImg&lt;/code&gt;, &lt;code&gt;xmlEscape&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;
		&lt;/li&gt;
		&lt;li&gt;Usage anywhere: &lt;code&gt;{X&lt;!----&gt;|&lt;u&gt;myTag&lt;/u&gt;:&lt;i&gt;rel-to-base/path/no/whitespace and optionally some description text&lt;/i&gt; |&lt;!----&gt;}&lt;/code&gt;&lt;/li&gt;
	&lt;/ol&gt;&lt;h2 id=&quot;hax.htmlLink&quot;&gt;hax.htmlLink&lt;/h2&gt;
	&lt;p class=&quot;up&quot;&gt;Outputs &lt;code&gt;&amp;lt;a &lt;i&gt;..&lt;/i&gt;&amp;gt;&lt;i&gt;..&lt;/i&gt;&amp;lt;/a&amp;gt;&lt;/code&gt;.&lt;/p&gt;
	
	&lt;ol&gt;
		&lt;li class=&quot;up&quot;&gt;
			&lt;a href=&quot;../xtypes/hax.htmlLink.html#decl&quot;&gt;Declaration&lt;/a&gt; of an &lt;code&gt;|X|hax.htmlLink:&lt;u&gt;&lt;i&gt;myTag&lt;/i&gt;&lt;/u&gt;:&lt;i&gt;some/rel/base/path&lt;/i&gt;: &lt;i&gt;..&lt;/i&gt;&lt;/code&gt; directive in a
			&lt;a href=&quot;../basics/haxproj.html#xdecl&quot;&gt;*.haxproj&lt;/a&gt; file,
			&lt;ul&gt;&lt;li&gt;further configuring: &lt;code&gt;attr&lt;/code&gt; , &lt;code&gt;xmlEscape&lt;/code&gt; , &lt;code&gt;uriAutoExt&lt;/code&gt; &lt;/li&gt;&lt;/ul&gt;
		&lt;/li&gt;
		&lt;li&gt;Usage anywhere: &lt;code&gt;{X&lt;!----&gt;|&lt;u&gt;myTag&lt;/u&gt;:&lt;i&gt;rel-to-base/path/no/whitespace and then the link text text&lt;/i&gt; |&lt;!----&gt;}&lt;/code&gt;&lt;/li&gt;
	&lt;/ol&gt;&lt;h2 id=&quot;hax.htmlLinks&quot;&gt;hax.htmlLinks&lt;/h2&gt;
	&lt;p class=&quot;up&quot;&gt;Helps with site navigation: outputs a sequence of &lt;code&gt;&amp;lt;a href=&amp;quot;..&amp;quot;&amp;gt; .. &amp;lt;/a&amp;gt;&lt;/code&gt; or
	&lt;code&gt;&amp;nbsp;&amp;lt;&lt;i&gt;outerhtmltag&lt;/i&gt; ..&amp;gt;&amp;lt;a href=&amp;quot;..&amp;quot;&amp;gt; .. &amp;lt;/a&amp;gt;&amp;lt;/&lt;i&gt;outerhtmltag&lt;/i&gt;&amp;gt;&lt;/code&gt;
	in a uniform manner.&lt;/p&gt;
	
	&lt;ol&gt;
		&lt;li class=&quot;up&quot;&gt;
			&lt;a href=&quot;../xtypes/hax.htmlLinks.html#decl&quot;&gt;Declaration&lt;/a&gt; of an &lt;code&gt;|X|hax.htmlLinks:&lt;u&gt;&lt;i&gt;myTag&lt;/i&gt;&lt;/u&gt;:&lt;i&gt;outerhtmltag&lt;/i&gt;: &lt;i&gt;..&lt;/i&gt;&lt;/code&gt; directive in a
			&lt;a href=&quot;../basics/haxproj.html#xdecl&quot;&gt;*.haxproj&lt;/a&gt; file,
			&lt;ul&gt;&lt;li&gt;further configuring: &lt;code&gt;attr&lt;/code&gt;, &lt;code&gt;itemsFirst&lt;/code&gt;, &lt;code&gt;itemsLast&lt;/code&gt;, &lt;code&gt;wrapHref&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;
		&lt;/li&gt;
		&lt;li&gt;Usage anywhere: &lt;code&gt;{X&lt;!----&gt;|&lt;u&gt;myTag&lt;/u&gt;: items = [..] , attr = [..] |&lt;!----&gt;}&lt;/code&gt;&lt;/li&gt;
	&lt;/ol&gt;&lt;h2 id=&quot;hax.htmlAnchors&quot;&gt;hax.htmlAnchors&lt;/h2&gt;
	&lt;p class=&quot;up&quot;&gt;Helps with page-level tables-of-content: outputs a sequence of
	&lt;code&gt;&amp;nbsp;&amp;lt;a href=&amp;quot;#..&amp;quot;&amp;gt; .. &amp;lt;/a&amp;gt;&lt;/code&gt; or
	&lt;code&gt;&amp;nbsp;&amp;lt;&lt;i&gt;outerhtmltag&lt;/i&gt; ..&amp;gt;&amp;lt;a href=&amp;quot;#..&amp;quot;&amp;gt; .. &amp;lt;/a&amp;gt;&amp;lt;/&lt;i&gt;outerhtmltag&lt;/i&gt;&amp;gt;&lt;/code&gt;
	&amp;mdash; one per &lt;code&gt;&amp;nbsp;&amp;lt;&lt;i&gt;gatherhtmltag&lt;/i&gt;&amp;gt;&lt;/code&gt; element found in the content source file.&lt;/p&gt;
	
	&lt;ol&gt;
		&lt;li class=&quot;up&quot;&gt;
			&lt;a href=&quot;../xtypes/hax.htmlAnchors.html#decl&quot;&gt;Declaration&lt;/a&gt; of an &lt;code&gt;|X|hax.htmlAnchors:&lt;u&gt;&lt;i&gt;myTag&lt;/i&gt;&lt;/u&gt;:&lt;i&gt;gatherhtmltag&lt;/i&gt;: &lt;i&gt;..&lt;/i&gt;&lt;/code&gt; directive in a
			&lt;a href=&quot;../basics/haxproj.html#xdecl&quot;&gt;*.haxproj&lt;/a&gt; file,
			&lt;ul&gt;&lt;li&gt;further configuring: &lt;code&gt;considerEmpty&lt;/code&gt;, &lt;code&gt;outputIfEmpty&lt;/code&gt;, &lt;code&gt;xmlEscapeHref&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;
		&lt;/li&gt;
		&lt;li&gt;Usage anywhere: &lt;code&gt;{X&lt;!----&gt;|&lt;u&gt;myTag&lt;/u&gt;:&lt;i&gt;outerhtmltag&lt;/i&gt;: attr = [..] |&lt;!----&gt;}&lt;/code&gt;&lt;/li&gt;
	&lt;/ol&gt;&lt;h2 id=&quot;hax.xmlEscape&quot;&gt;hax.xmlEscape&lt;/h2&gt;
	&lt;p class=&quot;up&quot;&gt;Outputs the given content with all occurrences of any of &lt;code&gt;&amp;amp; &amp;lt; &amp;gt; &amp;quot; &amp;apos;&lt;/code&gt; each appropriately
	entity-escaped for safe inclusion in HTML/XML/etc. markup.&lt;/p&gt;
	
	&lt;ol&gt;
		&lt;li class=&quot;up&quot;&gt;
			&lt;a href=&quot;../xtypes/hax.xmlEscape.html#decl&quot;&gt;Declaration&lt;/a&gt; of an &lt;code&gt;|X|hax.xmlEscape:&lt;u&gt;&lt;i&gt;myTag&lt;/i&gt;&lt;/u&gt;&lt;/code&gt; directive in a
			&lt;a href=&quot;../basics/haxproj.html#xdecl&quot;&gt;*.haxproj&lt;/a&gt; file,
			&lt;ul&gt;&lt;li&gt;further configuring: &lt;i&gt;(no other settings)&lt;/i&gt;&lt;/li&gt;&lt;/ul&gt;
		&lt;/li&gt;
		&lt;li&gt;Usage anywhere: &lt;code&gt;{X&lt;!----&gt;|&lt;u&gt;myTag&lt;/u&gt;: &lt;i&gt;any &amp;quot;content&amp;apos; to &amp;lt;&amp;gt; XML&amp;amp;HTML-escape&lt;/i&gt; |&lt;!----&gt;}&lt;/code&gt;&lt;/li&gt;
	&lt;/ol&gt;&lt;h2 id=&quot;hax.dtFormat&quot;&gt;hax.dtFormat&lt;/h2&gt;
	&lt;p class=&quot;up&quot;&gt;Outputs in a designated output format any input date/time text-values encoded in a designated input format.&lt;/p&gt;
	
	&lt;ol&gt;
		&lt;li class=&quot;up&quot;&gt;
			&lt;a href=&quot;../xtypes/hax.dtFormat.html#decl&quot;&gt;Declaration&lt;/a&gt; of an &lt;code&gt;|X|hax.dtFormat:&lt;u&gt;&lt;i&gt;myTag&lt;/i&gt;&lt;/u&gt;:&lt;i&gt;dtf_in&lt;/i&gt;:&lt;i&gt;dtf_out&lt;/i&gt;&lt;/code&gt; directive in a
			&lt;a href=&quot;../basics/haxproj.html#xdecl&quot;&gt;*.haxproj&lt;/a&gt; file,
			&lt;ul&gt;&lt;li&gt;further configuring: &lt;i&gt;(no other settings)&lt;/i&gt;&lt;/li&gt;&lt;/ul&gt;
		&lt;/li&gt;
		&lt;li&gt;Usage anywhere: &lt;code&gt;{X&lt;!----&gt;|&lt;u&gt;myTag&lt;/u&gt;: &lt;i&gt;any date/time value currently formatted as inputdtfname or as YYYY-MM-DD&lt;/i&gt; |&lt;!----&gt;}&lt;/code&gt;&lt;/li&gt;
	&lt;/ol&gt;&lt;h2 id=&quot;hax.unMarkup&quot;&gt;hax.unMarkup&lt;/h2&gt;
	&lt;p class=&quot;up&quot;&gt;Outputs the given content with HTML/XML/etc. markup tags (but not entities outside such tags) naively replaced by space characters.&lt;/p&gt;
	
	&lt;ol&gt;
		&lt;li class=&quot;up&quot;&gt;
			&lt;a href=&quot;../xtypes/hax.unMarkup.html#decl&quot;&gt;Declaration&lt;/a&gt; of an &lt;code&gt;|X|hax.unMarkup:&lt;u&gt;&lt;i&gt;myTag&lt;/i&gt;&lt;/u&gt;&lt;/code&gt; directive in a
			&lt;a href=&quot;../basics/haxproj.html#xdecl&quot;&gt;*.haxproj&lt;/a&gt; file,
			&lt;ul&gt;&lt;li&gt;further configuring: &lt;i&gt;(no other settings)&lt;/i&gt;&lt;/li&gt;&lt;/ul&gt;
		&lt;/li&gt;
		&lt;li&gt;Usage anywhere: &lt;code&gt;{X&lt;!----&gt;|&lt;u&gt;myTag&lt;/u&gt;: &lt;i&gt;any content to plain-text-ify&lt;/i&gt; |&lt;!----&gt;}&lt;/code&gt;&lt;/li&gt;
	&lt;/ol&gt;&lt;h2 id=&quot;hax.noOp&quot;&gt;hax.noOp&lt;/h2&gt;
	&lt;p class=&quot;up&quot;&gt;Outputs either the given content exactly-as-specified, or ignores it and outputs the pre-configured &quot;constant&quot; content.&lt;/p&gt;
	
	&lt;ol&gt;
		&lt;li class=&quot;up&quot;&gt;
			&lt;a href=&quot;../xtypes/hax.noOp.html#decl&quot;&gt;Declaration&lt;/a&gt; of an &lt;code&gt;|X|hax.noOp:&lt;u&gt;&lt;i&gt;myTag&lt;/i&gt;&lt;/u&gt;&lt;/code&gt; or &lt;code&gt;|X|hax.noOp:&lt;i&gt;myTag&lt;/i&gt;:&lt;i&gt;constant-content-here&lt;/i&gt;&lt;/code&gt; directive in a
			&lt;a href=&quot;../basics/haxproj.html#xdecl&quot;&gt;*.haxproj&lt;/a&gt; file,
			&lt;ul&gt;&lt;li&gt;further configuring: &lt;i&gt;(no other settings)&lt;/i&gt;&lt;/li&gt;&lt;/ul&gt;
		&lt;/li&gt;
		&lt;li&gt;Usage anywhere: &lt;code&gt;{X&lt;!----&gt;|&lt;u&gt;myTag&lt;/u&gt;: &lt;i&gt;any content to output or discard here&lt;/i&gt; |&lt;!----&gt;}&lt;/code&gt;&lt;/li&gt;
	&lt;/ol&gt;&lt;h2 id=&quot;hax.snippet&quot;&gt;hax.snippet&lt;/h2&gt;
	&lt;p class=&quot;up&quot;&gt;Renders the named &quot;snippet&quot; (aka. &quot;controls&quot; / &quot;components&quot; / &quot;sub-templates&quot;) substituting the specified
	named-parameter values.&lt;/p&gt;
	
	&lt;ol&gt;
		&lt;li class=&quot;up&quot;&gt;
			&lt;a href=&quot;../xtypes/hax.snippet.html#decl&quot;&gt;Declaration&lt;/a&gt; of an &lt;code&gt;|X|hax.snippet:&lt;u&gt;&lt;i&gt;myTag&lt;/i&gt;&lt;/u&gt;: &lt;i&gt;..&lt;/i&gt;&lt;/code&gt; directive in a
			&lt;a href=&quot;../basics/haxproj.html#xdecl&quot;&gt;*.haxproj&lt;/a&gt; file,
			&lt;ul&gt;&lt;li&gt;further configuring: &lt;code&gt;vars&lt;/code&gt;, &lt;code&gt;content&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;
		&lt;/li&gt;
		&lt;li&gt;Usage anywhere: &lt;code&gt;{X&lt;!----&gt;|&lt;u&gt;myTag&lt;/u&gt;: vars = [..], content = &amp;quot;..&amp;quot; |&lt;!----&gt;}&lt;/code&gt;&lt;/li&gt;
	&lt;/ol&gt;&lt;h2 id=&quot;hax.iterator&quot;&gt;hax.iterator&lt;/h2&gt;
	&lt;p class=&quot;up&quot;&gt;Outputs a sequence of values from the specified enumerator, applying the specified filtering/ordering/limits.&lt;/p&gt;
	
	&lt;ol&gt;
		&lt;li class=&quot;up&quot;&gt;
			&lt;a href=&quot;../xtypes/hax.iterator.html#decl&quot;&gt;Declaration&lt;/a&gt; of an &lt;code&gt;|X|hax.iterator:&lt;u&gt;&lt;i&gt;myTag&lt;/i&gt;&lt;/u&gt;: &lt;i&gt;..&lt;/i&gt;&lt;/code&gt; directive in a
			&lt;a href=&quot;../basics/haxproj.html#xdecl&quot;&gt;*.haxproj&lt;/a&gt; file,
			&lt;ul&gt;&lt;li&gt;further configuring: &lt;code&gt;prefix&lt;/code&gt;, &lt;code&gt;suffix&lt;/code&gt;, &lt;code&gt;joinVia&lt;/code&gt;, &lt;code&gt;content&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;
		&lt;/li&gt;
		&lt;li&gt;Usage anywhere: &lt;code&gt;{X&lt;!----&gt;|&lt;u&gt;myTag&lt;/u&gt;: ..  |&lt;!----&gt;}&lt;/code&gt;&lt;/li&gt;
	&lt;/ol&gt;&lt;h2 id=&quot;hax.feedView&quot;&gt;hax.feedView&lt;/h2&gt;
	&lt;p class=&quot;up&quot;&gt;Renders posts from the specified feeds grouped as specified, delegating display logic to the specified X-tags.&lt;/p&gt;
	
	&lt;ol&gt;
		&lt;li class=&quot;up&quot;&gt;
			&lt;a href=&quot;../xtypes/hax.feedView.html#decl&quot;&gt;Declaration&lt;/a&gt; of an &lt;code&gt;|X|hax.feedView:&lt;u&gt;&lt;i&gt;myTag&lt;/i&gt;&lt;/u&gt;: &lt;i&gt;..&lt;/i&gt;&lt;/code&gt; directive in a
			&lt;a href=&quot;../basics/haxproj.html#xdecl&quot;&gt;*.haxproj&lt;/a&gt; file,
			&lt;ul&gt;&lt;li&gt;further configuring: &lt;code&gt;xnameGroupHeading&lt;/code&gt;, &lt;code&gt;feedWrap&lt;/code&gt;, &lt;code&gt;xnameFeedItem&lt;/code&gt;, &lt;code&gt;feedMore&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;
		&lt;/li&gt;
		&lt;li&gt;Usage anywhere: &lt;code&gt;{X&lt;!----&gt;|&lt;u&gt;myTag&lt;/u&gt;: feeds = [..] , groups = [..] , xVars = [..]  |&lt;!----&gt;}&lt;/code&gt;&lt;/li&gt;
	&lt;/ol&gt;
&lt;/span&gt;
</content>
    </entry>
</feed>